@Aspect 프록시 - 적용
- 스프링 애플리케이션에 프록시를 적용하려면 Pointcut 과 Advice 로 구성되어있는 Advisor 를 만들어서 스프링 빈으로 등록해야한다.
  그러면 나머지는 자동 프록시 생성기 AutoProxyCreator (AnnotationAwareAspectJAutoProxyCreator) 가 모두 자동으로 처리해준다.
  자동 프록시 생성기는 Spring Bean 으로 등록된 Advisor 들을 찾고, 스프링 Bean 들에 자동으로 프록시를 적용해준다. (물론 포인트컷이 매칭되는 경우에 프록시를 생성한다.)
- 스프링은 @Aspect 어노테이션으로 매우 편리하게 포인트컷과 어드바이스로 구성되어 있는 어드바이저 생성 기능을 지원한다.
  직접 만들었던 Advisor 를 어노테이션으로 편리하게 만드는거라 생각할 수 있다.

@Aspect 를 어드바이저로 변환해서 저장하는 과정
- 1. 실행 - 스프링 애플리케이션 로딩 시점에 자동 프록시 생성기를 호출한다.
- 2. 모든 @Aspect 빈 조회 : 자동 프록시는 생성기는 스프링 컨테이너에서 @Aspect 어노테이션이 붙은 스프링 빈을 모두 조회한다.
- 3. Advisor 생성 : @Aspect 어드바이저 빌더를 통해 @Aspect 어노테이션 정보를 기반으로 Advisor 를 생성한다. (@Around 의 값은 Pointcut 으로, 메서드 안은 Advice 로 따라서 Advisor)
- 4. @Aspect 기반 어드바이저 저장 : 생성한 어드바이저를 @Aspect 어드바이저 빌더 내부에 저장한다.

@Aspect 어드바이저 빌더
- BeanFactoryAspectJAdvisorBuilder 클래스를 의미. @Aspect 의 정보를 기반으로 포인트컷, 어드바이스, 어드바이저를 생성하고 보관하는 것을 담당한다.
  @Aspect 의 정보를 기반으로 어드바이저를 만들고, @Aspect 어드바이저 빌더 내부 저장소에 캐시한다. 캐시에 어드바이저가 이미 만들어져 있는 경우 캐시에
  저장된 어드바이저를 반환한다.

자동 프록시 생성기의 작동 과정
- 1. 생성 : 스프링 Bean 대상이 되는 객체를 생성한다. (@Bean, ComponentScan 포함)
- 2. 전달 : 생성된 객체를 빈 저장소에 등록하기 직전에 빈 후처리기에 전달한다.
- 3-1. Advisor 빈 조회 : 스프링 컨테이너에서 Advisor 빈을 모두 조회한다.
- 3-2. @Aspect Advisor 조회 : @Aspect 어드바이저 빌더 내부에 저장된 Advisor 를 모두 조회한다.
- 4. 프록시 적용 대상 체크 : 앞서 3-1, 3-2 에서 조회한 Advisor 에 포함되어있는 포인트컷을 사용해서 해당 객체가 프록시를 적용할 대상인지
                         아닌지 판단한다. 이 떄 객체의 클래스 정보는 물론이고, 해당 객체의 모든 메서드를 포인트컷에 하나하나 모두 매칭해본다.
                         그래서 조건이 하나라도 만족하면 프록시 적용 대상이 된다. 예를 들어서 메서드 하나만 포인트컷 조건에 만족해도 프록시 적용 대상이 된다.
- 5. 프록시 생성 : 프록시 적용 대상이면 프록시를 생성하고 프록시를 반환한다. 그래서 프록시를 스프링 Bean 으로 등록한다. 만약 프록시 적용 대상이 아니라면
                 원본 객체를 스프링 빈으로 등록한다.
- 6. 빈 등록 : 반환된 객체는 스프링 빈으로 등록된다.