// 꼭 생성자 주입을 선택해라!!!!
- 과거에는 수정자 주입과 필드 주입을 많이 사용했지만, 최근에는 스프링을 포함한 DI 프레임워크 대부분이 생성자 주입을 권장한다. 이유는 아래와 같다.
    1. 불변
        --> 대부분의 의존관계 주입은 한번 일어나면 애플리케이션 종료시점까지 의존관계를 변경할 일이 없음. 오히려 대부분의 의존관계는 애플리케이션 종료 전까지 변하면 안됨.
        --> 수정자 주입을 사용하면, setXxx 메서드를 public 으로 열어두어야 함 --> 누군가 실수로 변경할 수 도 있고, 변경하면 안되는 메서드를 열어두는 것은 좋은 설계 방법이 아님.
        결론 : 생성자 주입은 객체를 생성할 때 딱 1번만 호출되므로 이후에 호출되는 일이 없다. 따라서 불변하게 설계할 수 있음.


    2. 누락
        --> 스프링(프레임워크) 없이 순수한 자바 코드를 단위 테스트 하는 경우에 의존관계 주입을 누락되어 NPE 가 발생가능
            EX) 생성자 인젝션이 아닌 Setter 인젝션을 사용하는 클래스가 있음
                --> 테스트시 new 로 인스턴스를 만든다음에 테스트코드를 실행했음 --> 하지만, 실행했더니 NPE 가 터짐 --> 이유는 setXXX 로 의존성을 주입해주지 않았기 떄문(누락)
                --> 하지만, 생성자 인젝션을 사용하면 실행 시, 컴파일시 오류가 발생함.

    3. final 키워드 사용 가능
        --> 생성자 주입을 사용하면 필드에 final 키워드를 사용할 수 있다. 그래서 생성자에서 혹시라도 값이 설정되지 않거나 필드자체에서 초기값을 설정해주지 않으면
            오류를 컴파일 시점에 막아준다. (컴파일 오류는 세상에서 가장 빠르고, 좋은 오류다!)
            INFO ) final 키워드는 생성자 혹은 직접 필드에서만 초기값 설정이 가능하다.
                   final 은 마지막이라는 의미, 즉 한번 설정하면 불변객체. --> 따라서 생성자 혹은 직접 필드에서만 초기값 설정가능함.
                   final 을 사용하면 세터 setXXX 로 값 설정 불가. setXXX 는 인스턴스가 생성된후 설정하는것(생성자 호출 후)이고, 결국에는 값을 변경하는 행위라 사용불가능.
            결론 : 오직 생성자 주입 방식만 final 키워드를 사용할 수 있음.


// 정리
- 생성자 주입 방식을 선택하는 이유는 여러가지가 있지만, 프레임워크에 의존하지 않고, 순수한 자바 언어의 특징을 잘 살리는 방법이기도 하다.
- 기본으로 생성자 주입을 사용하고, 필수 값이 아닌 경우에는 수정자 주입 방식을 옵션으로 부여하면 된다. (생성자 주입과 수정자 주입을 동시에 사용할 수 있다.)
- 항상 생성자 주입을 선택해라! 그리고 가끔 옵션이 필요하면 수정자 주입을 선택해라. 필드 주입은 사용하지 않는게 좋다.