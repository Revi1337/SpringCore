// 다양한 의존관계 주입 방법
1. 생성자 주입
2. 수정자 주입(setter 주입)
3. 필드 주입
4. 일반 메서드 주입

// 생성자 주입
- 이름 그대로 생성자를 통해서 의존 관계를 주입 받는 방법임. (지금까지 진행했던 방법이 생성자 주입)
--> 특징
    : 컨테이너에 빈으로 등록될때, 생성자 호출시점에 딱 1번만 호출되는것이 보장됨.
    : 불변, 필수 의존관계에 사용함.
***** 중요! *****
1. 생성자가 딱 1개만 있으면 @Autowired 를 생략해도 자동 주입 된다. 물론 스프링 빈에만 해당함.
2. 스프링 라이프사이클에서 Bean 을 스프링컨테이너에 등록하려면 결국엔 생성자를 호출하게됨 --> 이때 필요한 의존성을 주입해줌. --> 따라서 생성자 주입은 Bean 이 등록되면서 같이 일어남.
   즉, Bean 으로 등록하는 클래스에 생성자주입패턴, 세터주입패턴 등이 모두 존재하면, 생성자주입패턴이 제일먼저 호출되고, 그 다음 세터주입패턴이 호출된다.
*****************

// 수정자 주입(setter 주입)
- setter 라 불리는 필드의 값을 변경하는 수정자 메서드를 통해서 의존관계를 주입하는 방법
--> 특징
    : 선택, 변경 가능성이 있는 의존관계에 사용 --> 선택적으로 의존성을 주입해줄 수 있다는 말 --> @Autowired 의 기본 동작은
      주입할 대상이 없으면 오류가 발생. --> 주입할 대상이 없어도 동작하게 하려면 @Autowired(required = false) 를 사용해야 함
    : 자바빈 프로퍼티 규약의 수정자 메서드 방식을 사용하는 방법
***** 중요! *****
1. 수정자 주입은 꼭 setter 메서드위에 @Autowired 를 달아주어야함 --> 그래야 스프링컨테이너에서 Bean 이 등록된 다음, 의존성을 주입해줌.
2. Bean 으로 등록하는 클래스에 생성자주입패턴, 세터주입패턴 등이 모두 존재하면, 생성자주입패턴이 제일먼저 호출되고, 그 다음 세터주입패턴이 호출된다.
*****************

// 필드 주입
- 이름 그대로 필드에 바로 주입하는 방법
--> 특징
    : 코드가 간결해서 많은 개발자들을 유혹하지만 외부에서 변경이 불가능해서 테스트 하기 힘들다는 치명적인 단점. (순수한 자바코드로 테스트가 불가 = new 로 생성해서 사용 불가)
    : DI 프레임워크가 없으면 아무것도 할 수 없다.
    : 사용하지 말자!
        사용해도 되는경우 ?
        : 애플리케이션의 실제 코드와 관계 없는 테스트 코드
        : 스프링 설정을 목적으로 하는 @Configuration 같은 곳에서만 특별한 용도로 사용
참고: 순수한 자바 테스트 코드에는 당연히 @Autowired 가 동작하지 않는다. @SpringBootTest 처럼 스프링 컨테이너를 테스트에 통합한 경우에만 가능하다.
참고: 어쩌면 당연한 이야기이지만 의존관계 자동 주입은 스프링 컨테이너가 관리하는 스프링 빈이어야 동작한다.
     스프링 빈이 아닌 Member 같은 클래스에서 @Autowired 코드를 적용해도 아무 기능도 동작하지 않는다

// 일반 메서드 주입
- 일반 메서드를 통해서 주입 받을 수 있다. (그냥 잘사용안함)
특징
    : 한번에 여러 필드를 주입 받을 수 있다
참고:
    어쩌면 당연한 이야기이지만 의존관계 자동 주입은 스프링 컨테이너가 관리하는 스프링 빈이어야 동작한다.
    스프링 빈이 아닌 Member 같은 클래스에서 @Autowired 코드를 적용해도 아무 기능도 동작하지 않는다

// 옵션 처리
- 주입할 스프링 빈이 없어도 동작해야 할 때가 있다.
  그런데 @Autowired 만 사용하면 required 옵션의 기본값이 true 로 되어 있어서 자동 주입 대상이 없으면 오류가 발생함.
** 자동 주입 대상을 옵션으로 처리하는 방법 **
    - @Autowired(required=false)            : 자동 주입할 대상이 없으면 수정자 메서드 자체가 호출 안됨.
    - org.springframework.lang.@Nullable    : 자동 주입할 대상이 없으면 null 이 입력된다.
    - Optional<>                            : 자동 주입할 대상이 없으면 Optional.empty 가 입력된다.
--> 참고: @Nullable, Optional 은 스프링 전반에 걸쳐서 지원된다. 예를 들어서 생성자 자동 주입에서 특정 필드에만 사용해도 된다
